name: Update Logistics Dashboard

on:
  schedule:
    # Run every 5 minutes
    - cron: '*/5 * * * *'
  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      needs_update: ${{ steps.check.outputs.needs_update }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google-auth google-api-python-client

    - name: Check for changes
      id: check
      env:
        GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
        CI: "true"
      run: |
        python check_changes.py > check_output.txt 2>&1
        if grep -q "NEEDS_UPDATE=true" check_output.txt; then
          echo "needs_update=true" >> $GITHUB_OUTPUT
        else
          echo "needs_update=false" >> $GITHUB_OUTPUT
        fi
        cat check_output.txt

    - name: Commit timestamp file
      if: steps.check.outputs.needs_update == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -f last_update.json
        git diff --staged --quiet || git commit -m "Update last processed timestamp [skip ci]"
        git push

  update-dashboard:
    needs: check-changes
    if: always() && needs.check-changes.result == 'success' && needs.check-changes.outputs.needs_update == 'true'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install gspread google-auth pandas

    - name: Update dashboard
      env:
        GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
      run: |
        python logistics_dashboard_updater.py
        
